-- VHDL Entity Wasmachine.wasmachien_block.symbol
--
-- Created:
--          by - Perij.UNKNOWN (LAPTOP-Q0P13GKH)
--          at - 14:24:36 18/03/2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2022.1 Built on 21 Jan 2022 at 13:00:30
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY wasmachien_block IS
   PORT( 
      aan_uit           : IN     std_logic                     := '0';
      centrifugeerkeuze : IN     std_logic_vector (1 DOWNTO 0) := "01";
      clk               : IN     std_logic                     := '0';
      deur_dicht        : IN     std_logic                     := '1';
      kuip_leeg         : IN     std_logic;
      programmakeuze    : IN     std_logic_vector (1 DOWNTO 0) := "00";
      start             : IN     std_logic                     := '0';
      t_hoog            : IN     std_logic                     := '0';
      t_laag            : IN     std_logic                     := '0';
      w_hoog            : IN     std_logic                     := '0';
      w_laag            : IN     std_logic                     := '0';
      deur_grendel      : OUT    std_logic                     := '0';
      klep_open         : OUT    std_logic                     := '0';
      led_start         : OUT    std_logic                     := '0';
      led_status        : OUT    std_logic_vector (2 DOWNTO 0) := "000";
      motor             : OUT    std_logic_vector (2 DOWNTO 0) := "000";
      pomp_aan          : OUT    std_logic                     := '0';
      verwarmen         : OUT    std_logic                     := '0'
   );

-- Declarations

END wasmachien_block ;

--
-- VHDL Architecture Wasmachine.wasmachien_block.struct
--
-- Created:
--          by - Perij.UNKNOWN (LAPTOP-Q0P13GKH)
--          at - 14:24:36 18/03/2025
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2022.1 Built on 21 Jan 2022 at 13:00:30
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY Wasmachine;

ARCHITECTURE struct OF wasmachien_block IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL afpompen_ready  : std_logic                    := '0';
   SIGNAL go_afpompen     : std_logic                    := '0';
   SIGNAL go_toevoer      : std_logic                    := '0';
   SIGNAL go_trommel      : std_logic                    := '0';
   SIGNAL go_verwarmen    : std_logic                    := '0';
   SIGNAL go_wassen       : std_logic                    := '0';
   SIGNAL toevoer_ready   : std_logic                    := '0';
   SIGNAL trommel_keuze   : std_logic                    := '0';
   SIGNAL trommel_ready   : std_logic                    := '0';
   SIGNAL verwarmen_ready : std_logic                    := '0';
   SIGNAL wassen_ready    : std_logic                    := '0';
   SIGNAL wassen_status   : std_logic_vector(2 DOWNTO 0) := "000";


   -- Component Declarations
   COMPONENT Afpompen
   PORT (
      aan_uit        : IN     std_logic ;
      clk            : IN     std_logic ;
      go_afpompen    : IN     std_logic ;
      kuip_leeg      : IN     std_logic ;
      afpompen_ready : OUT    std_logic  := '0';
      pomp_aan       : OUT    std_logic  := '0'
   );
   END COMPONENT;
   COMPONENT Master
   PORT (
      aan_uit       : IN     std_logic ;
      clk           : IN     std_logic ;
      deur_dicht    : IN     std_logic ;
      kuip_leeg     : IN     std_logic ;
      start         : IN     std_logic ;
      w_hoog        : IN     std_logic ;
      w_laag        : IN     std_logic ;
      wassen_ready  : IN     std_logic ;
      wassen_status : IN     std_logic_vector (2 DOWNTO 0);
      deur_grendel  : OUT    std_logic ;
      go_wassen     : OUT    std_logic ;
      led_start     : OUT    std_logic ;
      led_status    : OUT    std_logic_vector (2 DOWNTO 0)
   );
   END COMPONENT;
   COMPONENT Toevoer
   PORT (
      aan_uit       : IN     std_logic ;
      clk           : IN     std_logic ;
      go_toevoer    : IN     std_logic ;
      w_hoog        : IN     std_logic ;
      w_laag        : IN     std_logic ;
      klep_open     : OUT    std_logic  := '0';
      toevoer_ready : OUT    std_logic  := '0'
   );
   END COMPONENT;
   COMPONENT Trommel
   PORT (
      aan_uit           : IN     std_logic                     := '0';
      centrifugeerkeuze : IN     std_logic_vector (1 DOWNTO 0);
      clk               : IN     std_logic ;
      go_trommel        : IN     std_logic ;
      trommel_keuze     : IN     std_logic ;
      motor             : OUT    std_logic_vector (2 DOWNTO 0) := "000";
      trommel_ready     : OUT    std_logic                     := '0'
   );
   END COMPONENT;
   COMPONENT Verwarming
   PORT (
      aan_uit         : IN     std_logic ;
      clk             : IN     std_logic ;
      go_verwarmen    : IN     std_logic ;
      t_hoog          : IN     std_logic ;
      t_laag          : IN     std_logic ;
      w_laag          : IN     std_logic ;
      verwarmen       : OUT    std_logic  := '0';
      verwarmen_ready : OUT    std_logic  := '0'
   );
   END COMPONENT;
   COMPONENT Wassen
   PORT (
      aan_uit           : IN     std_logic ;
      afpompen_ready    : IN     std_logic ;
      centrifugeerkeuze : IN     std_logic_vector (1 DOWNTO 0);
      clk               : IN     std_logic ;
      go_wassen         : IN     std_logic ;
      kuip_leeg         : IN     std_logic ;
      programmakeuze    : IN     std_logic_vector (1 DOWNTO 0);
      t_hoog            : IN     std_logic ;
      t_laag            : IN     std_logic ;
      toevoer_ready     : IN     std_logic ;
      trommel_ready     : IN     std_logic ;
      verwarmen_ready   : IN     std_logic ;
      w_hoog            : IN     std_logic ;
      w_laag            : IN     std_logic ;
      go_afpompen       : OUT    std_logic ;
      go_toevoer        : OUT    std_logic ;
      go_trommel        : OUT    std_logic ;
      go_verwarmen      : OUT    std_logic ;
      trommel_keuze     : OUT    std_logic ;
      wassen_ready      : OUT    std_logic ;
      wassen_status     : OUT    std_logic_vector (2 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Afpompen USE ENTITY Wasmachine.Afpompen;
   FOR ALL : Master USE ENTITY Wasmachine.Master;
   FOR ALL : Toevoer USE ENTITY Wasmachine.Toevoer;
   FOR ALL : Trommel USE ENTITY Wasmachine.Trommel;
   FOR ALL : Verwarming USE ENTITY Wasmachine.Verwarming;
   FOR ALL : Wassen USE ENTITY Wasmachine.Wassen;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_5 : Afpompen
      PORT MAP (
         aan_uit        => aan_uit,
         clk            => clk,
         go_afpompen    => go_afpompen,
         kuip_leeg      => kuip_leeg,
         afpompen_ready => afpompen_ready,
         pomp_aan       => pomp_aan
      );
   U_0 : Master
      PORT MAP (
         aan_uit       => aan_uit,
         clk           => clk,
         deur_dicht    => deur_dicht,
         kuip_leeg     => kuip_leeg,
         start         => start,
         w_hoog        => w_hoog,
         w_laag        => w_laag,
         wassen_ready  => wassen_ready,
         wassen_status => wassen_status,
         deur_grendel  => deur_grendel,
         go_wassen     => go_wassen,
         led_start     => led_start,
         led_status    => led_status
      );
   U_6 : Toevoer
      PORT MAP (
         aan_uit       => aan_uit,
         clk           => clk,
         go_toevoer    => go_toevoer,
         w_hoog        => w_hoog,
         w_laag        => w_laag,
         klep_open     => klep_open,
         toevoer_ready => toevoer_ready
      );
   U_1 : Trommel
      PORT MAP (
         aan_uit           => aan_uit,
         centrifugeerkeuze => centrifugeerkeuze,
         clk               => clk,
         go_trommel        => go_trommel,
         trommel_keuze     => trommel_keuze,
         motor             => motor,
         trommel_ready     => trommel_ready
      );
   U_3 : Verwarming
      PORT MAP (
         aan_uit         => aan_uit,
         clk             => clk,
         go_verwarmen    => go_verwarmen,
         t_hoog          => t_hoog,
         t_laag          => t_laag,
         w_laag          => w_laag,
         verwarmen       => verwarmen,
         verwarmen_ready => verwarmen_ready
      );
   U_2 : Wassen
      PORT MAP (
         aan_uit           => aan_uit,
         afpompen_ready    => afpompen_ready,
         centrifugeerkeuze => centrifugeerkeuze,
         clk               => clk,
         go_wassen         => go_wassen,
         kuip_leeg         => kuip_leeg,
         programmakeuze    => programmakeuze,
         t_hoog            => t_hoog,
         t_laag            => t_laag,
         toevoer_ready     => toevoer_ready,
         trommel_ready     => trommel_ready,
         verwarmen_ready   => verwarmen_ready,
         w_hoog            => w_hoog,
         w_laag            => w_laag,
         go_afpompen       => go_afpompen,
         go_toevoer        => go_toevoer,
         go_trommel        => go_trommel,
         go_verwarmen      => go_verwarmen,
         trommel_keuze     => trommel_keuze,
         wassen_ready      => wassen_ready,
         wassen_status     => wassen_status
      );

END struct;
